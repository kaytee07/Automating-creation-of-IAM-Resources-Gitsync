AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Best-practice CloudFormation template with GitSync that creates IAM Users,
  IAM Groups with least-privilege policies, and a one-time password stored in Secrets Manager.

Parameters:
  PasswordLength:
    Type: Number
    Default: 16
    Description: Length of the autogenerated one-time password
    MinValue: 12
    MaxValue: 30

  S3GroupName:
    Type: String
    Default: S3ReadOnlyGroup
    Description: IAM group name for S3 read-only access

  EC2GroupName:
    Type: String
    Default: EC2ReadOnlyGroup
    Description: IAM group name for EC2 read-only access

  S3UserName:
    Type: String
    Default: s3-user
    Description: IAM username for S3 access

  EC2UserName:
    Type: String
    Default: ec2-user
    Description: IAM username for EC2 access

Resources:

  # -------------------------------
  # 1. One-Time Password (Secrets Manager)
  # -------------------------------
  OneTimePasswordSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: One-time password for IAM Users
      GenerateSecretString:
        SecretStringTemplate: "{}"
        GenerateStringKey: "password"
        PasswordLength: !Ref PasswordLength
        ExcludeCharacters: "\"@/\\"
        RequireEachIncludedType: true

  # -------------------------------
  # 2. IAM Groups with Policies
  # -------------------------------
  S3ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref S3GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  EC2ReadOnlyGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Ref EC2GroupName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess

  # -------------------------------
  # 3. IAM Users
  # -------------------------------
  EC2User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref EC2UserName
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::password}}"
        PasswordResetRequired: true
      Groups:
        - !Ref EC2ReadOnlyGroup

  S3User:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref S3UserName
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OneTimePasswordSecret}::password}}"
        PasswordResetRequired: true
      Groups:
        - !Ref S3ReadOnlyGroup

Outputs:
  EC2UserName:
    Description: IAM username for EC2 access
    Value: !Ref EC2UserName
    Export:
      Name: !Sub "${AWS::StackName}-EC2User"

  S3UserName:
    Description: IAM username for S3 access
    Value: !Ref S3UserName
    Export:
      Name: !Sub "${AWS::StackName}-S3User"

  OneTimePasswordSecretARN:
    Description: ARN of the one-time password stored in Secrets Manager
    Value: !Ref OneTimePasswordSecret
    Export:
      Name: !Sub "${AWS::StackName}-PasswordSecret"
